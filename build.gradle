/*
  Gradle file to build and run a sample spring boot application.
*/
plugins {
  id 'java'
  id 'idea'
  id 'org.springframework.boot' version '2.5.15'
  id 'io.freefair.lombok' version '8.6'
  id 'com.palantir.docker' version '0.36.0'
    id 'maven-publish'
}

group = 'in.co.rahogata.boot'
version = '0.1.0-SNAPSHOT'

final modsToExclude = [ 'junit' ]

configurations {
  modsToExclude.each { implementation.exclude module : it } 
}

repositories {
    mavenCentral()
    maven {
        url = 'https://s01.oss.sonatype.org/content/groups/staging/'
    }
}

dependencies {
    implementation(platform('org.springframework.boot:spring-boot-dependencies:2.5.15')) {
        dependencies {
            implementation('io.netty:netty-bom') {version {strictly '4.1.111.Final'}}
            implementation('ch.qos.logback:logback-classic') {version {strictly '1.2.13'}}
        }
    }
    implementation "org.springframework.boot:spring-boot-starter-web",
            "in.co.rahogata:lettucessl-spring-boot-starter:0.1.0-SNAPSHOT"

    testImplementation "org.junit.jupiter:junit-jupiter-engine"
}

test {
  useJUnitPlatform()
}

wrapper {
    gradleVersion = '8.7'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

docker {
    name = 'rahogata/' + project.name
    buildArgs([JAR_NAME: bootJar.archiveFileName.get()])
    files bootJar.outputs
}

publishing {
    publications {
        mavenReadme(MavenPublication) {
            artifact ("config.yaml") {
                artifactId = project.name + '-manifest'
                extension = 'yaml'
            }
        }
    }
    repositories {
        maven {
            url = uri('http://localhost:8081/repository/maven-snapshots/')
            credentials {
                username = 'admin'
                password = ''
            }
            allowInsecureProtocol = true
        }
    }
}